clear
close all
clc

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Pearl\Desktop\Edumacation\ENVR 300\Day 8 Group Proposal\Data.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/02/09 13:13:46

%% Import the PM 10 data
[~, ~, raw] = xlsread('C:\Users\Pearl\Desktop\Edumacation\ENVR 300\Day 8 Group Proposal\PM10DataRefined.xlsx','Sheet1');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,1));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);

%% Replace non-numeric cells with NaN: PM 10 
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable: PM 10 
data = reshape([raw{:}],size(raw));

%% Create table: PM 10 
PM10Data = table;

%% Allocate imported array to column variable names: PM 10 
PM10Data.Name = stringVectors(:,1);
PM10Data.VarName2 = data(:,1);
PM10Data.VarName3 = data(:,2);
PM10Data.VarName4 = data(:,3);
PM10Data.VarName5 = data(:,4);
PM10Data.VarName6 = data(:,5);
PM10Data.VarName7 = data(:,6);
PM10Data.VarName8 = data(:,7);
PM10Data.VarName9 = data(:,8);
PM10Data.VarName10 = data(:,9);
PM10Data.VarName11 = data(:,10);
PM10Data.VarName12 = data(:,11);
PM10Data.VarName13 = data(:,12);
PM10Data.VarName14 = data(:,13);
PM10Data.VarName15 = data(:,14);
PM10Data.VarName16 = data(:,15);
PM10Data.VarName17 = data(:,16);
PM10Data.VarName18 = data(:,17);
PM10Data.VarName19 = data(:,18);
PM10Data.VarName20 = data(:,19);
PM10Data.VarName21 = data(:,20);
PM10Data.VarName22 = data(:,21);
PM10Data.VarName23 = data(:,22);
PM10Data.VarName24 = data(:,23);
PM10Data.VarName25 = data(:,24);
PM10Data.VarName26 = data(:,25);
PM10Data.VarName27 = data(:,26);
PM10Data.VarName28 = data(:,27);
PM10Data.VarName29 = data(:,28);
PM10Data.VarName30 = data(:,29);
PM10Data.VarName31 = data(:,30);
PM10Data.VarName32 = data(:,31);
PM10Data.VarName33 = data(:,32);
PM10Data.VarName34 = data(:,33);
PM10Data.VarName35 = data(:,34);
PM10Data.VarName36 = data(:,35);
PM10Data.VarName37 = data(:,36);
PM10Data.VarName38 = data(:,37);
PM10Data.VarName39 = data(:,38);
PM10Data.VarName40 = data(:,39);

%% Clear temporary variables: PM 10 
clearvars data raw stringVectors R;

%% Extract PM10 data for the 10 countries

% refinedPM10 is the PM10 data matrix with the rows being population
% between 1970 to 2008 and columns being 10 countris in this order:
%Angola, Bulgaria, Croatia, Georgia, Hungary, Lithuania, Malawi, Niger,South Sudan,  Uganda 

countries = ["Angola", "Bulgaria", "Croatia", "Georgia", "Hungary", "Lithuania", "Malawi",...
    "Niger","Sudan",  "Uganda"];
d2 = table2array(PM10Data);
refinedPM10 = [];
refinedPM10(:,1)=[1970:2008];
i =2;
for o = 1:length(countries)
    for n = 1:length(d2)
        if contains(countries(o),d2(n,1))
            tran = transpose(d2(n,2:end));
            for x = 1:length(tran)
                refinedPM10(x,i) = tran(x);
            end
            i = i+1;
        end
    end
end
refinedPM10(:,2:end) = refinedPM10(:,2:end)*1000000000;
clearvars n o tran x i;
%% Import Population Data
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Pearl\Desktop\Edumacation\ENVR 300\Day 8 Group Proposal\Population_per_country_1950_2015.xls
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/02/12 08:56:45

%% Import the data
[~, ~, raw] = xlsread('C:\Users\Pearl\Desktop\Edumacation\ENVR 300\Day 8 Group Proposal\Population_per_country_1950_2015.xls','Sheet1');
stringVectors = string(raw(:,1));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15]);

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
Populationpercountry19502015 = table;

%% Allocate imported array to column variable names
Populationpercountry19502015.Countryspopulationx1000 = stringVectors(:,1);
Populationpercountry19502015.VarName2 = data(:,1);
Populationpercountry19502015.VarName3 = data(:,2);
Populationpercountry19502015.VarName4 = data(:,3);
Populationpercountry19502015.VarName5 = data(:,4);
Populationpercountry19502015.VarName6 = data(:,5);
Populationpercountry19502015.VarName7 = data(:,6);
Populationpercountry19502015.VarName8 = data(:,7);
Populationpercountry19502015.VarName9 = data(:,8);
Populationpercountry19502015.VarName10 = data(:,9);
Populationpercountry19502015.VarName11 = data(:,10);
Populationpercountry19502015.VarName12 = data(:,11);
Populationpercountry19502015.VarName13 = data(:,12);
Populationpercountry19502015.VarName14 = data(:,13);
Populationpercountry19502015.VarName15 = data(:,14);

%% Clear temporary variables
clearvars data raw stringVectors;

%% Refine pop data for countries

% refinedPop is the Population data matrix with the rows being population
% between 1970 to 2008 and columns being 10 countris in this order:
%Angola, Bulgaria, Croatia, Georgia, Hungary, Lithuania, Malawi, Niger,South Sudan,  Uganda 

d2 = table2array(Populationpercountry19502015);
refinedPop = [];
refinedPop(:,1)=[1950:5:2015];
i =2;
for o = 1:length(countries)
    for n = 1:length(d2)
        if d2(n,1) == " " + countries(o)
            tran = transpose(d2(n,2:end));
            for x = 1:length(tran)
                refinedPop(x,i) = tran(x);
            end
            i = i+1;
        end
    end
end
clearvars n o tran x i;
refinedPop(:,2:end) = refinedPop(:,2:end)*1000;

        

%% Create graphs - Population Timeseries


for i = 2:11
    %figure 
    plot(refinedPop(:,1),refinedPop(:,i), 'k-','Linewidth', 2);
    title(['Population timeseries of ' countries(i-1) 'from 1950 to 2015']);
    xlabel('Years');
    ylabel('Total Population');
    grid on
    grid minor
end
      
%% Create Graphs - PM10 Timeseries

for i = 2:11
    %figure 
    plot(refinedPM10(:,1),refinedPM10(:,i), 'k-','Linewidth', 2);
    title(['PM10 concentration timeseries of ' countries(i-1) 'from 1970 to 2015']);
    xlabel('Years');
    ylabel('PM10 concentration (grams)');
    grid on
    grid minor
end

%% Per capita data

% perCapitaPM is the PM count per capita in g per person
perCapitaPM =[];
a=1;
for n = 1:length(refinedPM10)
    for x=1:length(refinedPop)
        if refinedPM10(n,1) == refinedPop(x,1)
            for i = 2:11
                percapita = refinedPM10(n,i)/refinedPop(x,i);
                perCapitaPM(a,i) = percapita;
                perCapitaPM(a,1) = refinedPop(x,1);
            end
            a=a+1;
        end
    end
end

clearvars i n x a percapita;

%% change in PM10 per capita vs time for all the 10 countries
    
i =1;
for n= 2:11
    %figure
    %subplot(5,2,i)
    plot(perCapitaPM(:,1),perCapitaPM(:,n),'r-','Linewidth', 2);
    title({'PM10 per capita timeseries' countries(i)});
    ylabel({'PM10 per capita' '(grams per person)'});
    xlabel('Years');  
    i=i+1;
end

%title({'PM10 per capita timeseries for all countreis'});
%ylabel({'PM10 per capita (grams per person)'});
%xlabel('Years');
%legend(countries);

%% PM10 per capita vs population
m1 = refinedPop(:,1) <= 2005;
m2 = refinedPop(:,1) >= 1970;
overlappingPop = refinedPop(m1 & m2);
trendTable = [];
i=1;
for n = 2:11
    figure
    plot(overlappingPop,perCapitaPM(:,n),'k^','MarkerSize', 4);
    title({'PM10 per capita VS Total Population' countries(i)});
    ylabel({'PM10 per capita' '(grams per person)'});
    xlabel('Population');  
    [coef,bint,r,rint,stats] = regress(perCapitaPM(:,n),[ones(size(perCapitaPM(:,n))),overlappingPop]);
    text(1951,1.2,['Slope = ',num2str(round(coef(2),3)),...
        '; R^2=',num2str(round(stats(1),3))...
        '; conf = [' num2str(round(bint(2,1),3)) ','...
            num2str(round(bint(2,2),3)) ']'])
        i=i+1;
end

%trendTable is a matrix of the slope of the rate PM10 per capita vs
%population trendline (row 1), and y-intercept (row 2), R^2 value (row 3)
            

